snippet p
	IO.puts(${1})
snippet #
	#{${1}}
snippet >
	|> ${1}
snippet &
	&(${1:&1}${2})
snippet if
	if ${1:true} do
		${2}
	end
snippet ife
	if ${1:true} do
		${2}
	else
		${3}
	end
snippet un
	unless ${1:false} do
		${2}
	end
snippet case
	case ${1} do
		_ -> "fallback"
	end
snippet cond
	cond do
		${1}
	end
snippet fn
	fn ${1} -> ${2} end
snippet defm
	defmodule ${1:ModuleName} do
		${2}
	end
snippet def
	def ${1:func_name}(${2}) do
		${3::ok}
	end
snippet defp
	defp ${1:func_name}(${2}) do
		${3::ok}
	end
snippet map
	Enum.map(${1})
snippet smap
	Stream.map(${1})
snippet red
	Enum.reduce(${1})
snippet sred
	Stream.reduce(${1})
snippet take
	Enum.take(${1})
snippet doc
	@doc """
	${1}
	"""
snippet mdoc
	@moduledoc """
	${1}
	"""
